<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>mioの小窝</title><description>四季正与你擦肩而过</description><link>https://17356085.github.io/</link><language>zh_CN</language><item><title>Git笔记</title><link>https://17356085.github.io/posts/2025/git%E7%AC%94%E8%AE%B0/</link><guid isPermaLink="true">https://17356085.github.io/posts/2025/git%E7%AC%94%E8%AE%B0/</guid><description>一些git常用的指令。</description><pubDate>Wed, 13 Aug 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;以下是 Git 最常用的核心指令清单，分为 &lt;strong&gt;基础操作&lt;/strong&gt;、&lt;strong&gt;分支管理&lt;/strong&gt;、&lt;strong&gt;撤销操作&lt;/strong&gt; 和 &lt;strong&gt;远程协作&lt;/strong&gt; 四类，附带通俗解释：&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;一、基础操作（每天必用）&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;初始化新仓库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git clone &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;克隆远程仓库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git clone https://github.com/user/repo.git&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git add &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添加文件到暂存区&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git add index.html&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;添加&lt;strong&gt;所有改动&lt;/strong&gt;（含新增/修改/删除）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git commit -m &quot;msg&quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;提交暂存区内容&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git commit -m &quot;修复登录bug&quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看工作区状态&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git log&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看提交历史&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git log --oneline&lt;/code&gt;（简洁版）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h3&gt;二、分支管理（多人协作核心）&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看本地分支&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建新分支&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git branch feature&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git checkout &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换分支&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git checkout main&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git checkout -b &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建并切换分支&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git checkout -b hotfix&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git merge &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;合并分支到当前分支&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git merge feature&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git branch -d &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除分支&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git branch -d feature&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h3&gt;三、撤销操作（救命必备）&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;场景&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git restore &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丢弃&lt;strong&gt;工作区&lt;/strong&gt;修改&lt;/td&gt;
&lt;td&gt;改乱了文件想复原&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git restore --staged &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将文件移出&lt;strong&gt;暂存区&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git add&lt;/code&gt; 后反悔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git reset --soft HEAD^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;撤销 commit（保留改动到暂存区）&lt;/td&gt;
&lt;td&gt;提交信息写错了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;彻底&lt;/strong&gt;回退到上一版本（慎用！）&lt;/td&gt;
&lt;td&gt;想完全放弃最近提交&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h3&gt;四、远程协作（GitHub 同步）&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看远程仓库地址&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;拉取远程更新（= fetch + merge）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git pull origin main&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;推送到远程仓库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git push origin main&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git fetch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;仅下载远程变更（不自动合并）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git fetch origin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h3&gt;🚀 高效组合技&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一键提交&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add . &amp;amp;&amp;amp; git commit -m &quot;更新&quot; &amp;amp;&amp;amp; git push
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;紧急修复&lt;/strong&gt;（跳过暂存）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git commit -am &quot;紧急修复&quot; &amp;amp;&amp;amp; git push
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;撤销未提交的改动&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git restore .  # 丢弃所有工作区修改
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;⚠️ 注意避坑&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; 会添加所有文件（包括临时文件），建议用 &lt;code&gt;.gitignore&lt;/code&gt; 过滤&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -f&lt;/code&gt; （强制推送）会覆盖远程历史，团队协作时禁用！&lt;/li&gt;
&lt;li&gt;提交前一定用 &lt;code&gt;git status&lt;/code&gt; 确认文件状态&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 建议配置别名简化操作（在 &lt;code&gt;~/.gitconfig&lt;/code&gt; 添加）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[alias]
  co = checkout
  br = branch
  st = status
  ci = commit
  df = diff
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</content:encoded></item><item><title>为博客配置评论区</title><link>https://17356085.github.io/posts/2025/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8C%BA%E5%8A%9F%E8%83%BD/</link><guid isPermaLink="true">https://17356085.github.io/posts/2025/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8C%BA%E5%8A%9F%E8%83%BD/</guid><description>还支持亮色暗色模式切换</description><pubDate>Wed, 13 Aug 2025 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;为博客配置评论区&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;在 misc 目录下新建 Giscus.astro 文件，内容如下（用你自己的参数替换）：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&quot;giscus-comments&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script src=&quot;https://giscus.app/client.js&quot;

  data-repo=&quot;17356085/17356085.github.io&quot;

  data-repo-id=&quot;R_kgDOPcYMPg&quot;

  data-category=&quot;Announcements&quot;

  data-category-id=&quot;DIC_kwDOPcYMPs4CuH1t&quot;

  data-mapping=&quot;pathname&quot;

  data-strict=&quot;0&quot;

  data-reactions-enabled=&quot;1&quot;

  data-emit-metadata=&quot;0&quot;

  data-input-position=&quot;bottom&quot;

  data-theme=&quot;{theme}&quot;

  data-lang=&quot;zh-CN&quot;

  crossorigin=&quot;anonymous&quot;

  async&amp;gt;

&amp;lt;/script&amp;gt;

&amp;lt;script is:inline&amp;gt;
  // 你站点的暗色主题 class，通常是 &apos;dark&apos;
  const DARK_CLASS = &apos;dark&apos;;
  // giscus 支持的主题名
  const LIGHT_THEME = &apos;light&apos;;
  const DARK_THEME = &apos;dark&apos;;

  function setGiscusTheme(theme) {
    const iframe = document.querySelector(&apos;iframe.giscus-frame&apos;);
    if (!iframe) return;
    iframe.contentWindow.postMessage(
      {
        giscus: {
          setConfig: {
            theme: theme,
          },
        },
      },
      &apos;https://giscus.app&apos;
    );
  }

  // 检查当前主题
  function getCurrentTheme() {
    return document.documentElement.classList.contains(DARK_CLASS) ? DARK_THEME : LIGHT_THEME;
  }

  // 初始设置
  window.addEventListener(&apos;DOMContentLoaded&apos;, () =&amp;gt; {
    setTimeout(() =&amp;gt; setGiscusTheme(getCurrentTheme()), 500);
  });

  // 监听主题切换（假设你的主题切换会修改 &amp;lt;html&amp;gt; 的 class）
  const observer = new MutationObserver(() =&amp;gt; {
    setGiscusTheme(getCurrentTheme());
  });
  observer.observe(document.documentElement, { attributes: true, attributeFilter: [&apos;class&apos;] });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;在 [...slug].astro 中这样导入和使用：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;import Giscus from &quot;../../components/misc/Giscus.astro&quot;;
// ...existing code...

&amp;lt;!-- 推荐插入在 License 之后、分页导航之前 --&amp;gt;
{licenseConfig.enable &amp;amp;&amp;amp; &amp;lt;License ... /&amp;gt;}
&amp;lt;Giscus /&amp;gt;

&amp;lt;div class=&quot;flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full&quot;&amp;gt;
  {/* ...分页导航... */}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item><item><title>我的技术学习笔记</title><link>https://17356085.github.io/posts/guide/</link><guid isPermaLink="true">https://17356085.github.io/posts/guide/</guid><description>记录我在编程学习路上的点滴心得与遇到的问题</description><pubDate>Tue, 12 Aug 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;大家好！这是我用 Fuwari 模板搭建的第一个博客，主要用来记录我的编程学习历程。&lt;/p&gt;
&lt;h2&gt;今日学习内容&lt;/h2&gt;
&lt;p&gt;今天主要学习了 Markdown 的基本语法和 Fuwari 模板的使用方法，总结几点收获：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Markdown 标题&lt;/strong&gt;：用 &lt;code&gt;#&lt;/code&gt; 符号表示，最多支持 6 级标题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;代码块&lt;/strong&gt;：用 ``` 包裹，可以指定语言类型，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 简单的打印语句
console.log(&quot;Hello, Fuwari!&quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content:encoded></item><item><title>GithubPages部署成功!!</title><link>https://17356085.github.io/posts/2025/%E6%88%90%E5%8A%9F%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%88%B0githubpages/</link><guid isPermaLink="true">https://17356085.github.io/posts/2025/%E6%88%90%E5%8A%9F%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%88%B0githubpages/</guid><description>这是我 Astro 博客的第一篇文章。</description><pubDate>Mon, 11 Aug 2025 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;我的第一篇博客文章&lt;/h1&gt;
&lt;p&gt;欢迎来到我学习关于 Astro 的新博客！在这里，我将分享我建立新网站的学习历程。&lt;/p&gt;
&lt;h2&gt;我做了什么&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装 Astro&lt;/strong&gt;：首先，我创建了一个新的 Astro 项目并设置好了我的在线账号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;制作页面&lt;/strong&gt;：然后我学习了如何通过创建新的 &lt;code&gt;.astro&lt;/code&gt; 文件并将它们保存在 &lt;code&gt;src/pages/&lt;/code&gt; 文件夹里来制作页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;发表博客文章&lt;/strong&gt;：这是我的第一篇博客文章！我现在有用 Astro 编写的页面和用 Markdown 写的文章了！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;下一步计划&lt;/h2&gt;
&lt;p&gt;我将完成 Astro 教程，然后继续编写更多内容。关注我以获取更多信息。&lt;/p&gt;
</content:encoded></item><item><title>苍穹外卖项目</title><link>https://17356085.github.io/posts/2025/project/</link><guid isPermaLink="true">https://17356085.github.io/posts/2025/project/</guid><pubDate>Fri, 08 Aug 2025 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;sky-take-out&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;在项目学习过程中发现需要学习（复习的知识）&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] maven对于父子依赖存在有疑问，在实操过程中花去大半时间&lt;/li&gt;
&lt;li&gt;[ ] ngin配置文件该怎么写？如何部署？是如何打通前后端之间的‘通信’？&lt;/li&gt;
&lt;li&gt;[ ] 对于如何正确使用git分支不是很理解&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;后续进一步优化项目的知识点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] mybatis-plue（和mybatis相比有什么区别？怎么用mybatis-plue开发？）&lt;/li&gt;
&lt;li&gt;[ ] Axios网络请求（Axious如何使用？）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;一、依赖项配置&lt;/h2&gt;
&lt;h3&gt;核心依赖版本信息&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;依赖类别&lt;/th&gt;
&lt;th&gt;版本号&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Spring Boot&lt;/td&gt;
&lt;td&gt;3.2.0&lt;/td&gt;
&lt;td&gt;支持 Java 21 的最新稳定版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;项目使用的 Java 版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MyBatis&lt;/td&gt;
&lt;td&gt;3.0.3&lt;/td&gt;
&lt;td&gt;适配 Spring Boot 3 的版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lombok&lt;/td&gt;
&lt;td&gt;1.18.30&lt;/td&gt;
&lt;td&gt;简化 Java 代码的工具库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FastJSON&lt;/td&gt;
&lt;td&gt;2.0.32&lt;/td&gt;
&lt;td&gt;支持 Java 17 + 的 JSON 处理库&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;各模块依赖详情&lt;/h3&gt;
&lt;h4&gt;1. 父模块 (sky-take-out) 依赖管理&lt;/h4&gt;
&lt;p&gt;父模块通过&lt;code&gt;dependencyManagement&lt;/code&gt;统一管理所有子模块的依赖版本，主要包含以下类别：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;依赖类别&lt;/th&gt;
&lt;th&gt;具体依赖&lt;/th&gt;
&lt;th&gt;版本&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;核心框架&lt;/td&gt;
&lt;td&gt;spring-boot-dependencies&lt;/td&gt;
&lt;td&gt;3.2.0&lt;/td&gt;
&lt;td&gt;Spring Boot 核心依赖集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据访问&lt;/td&gt;
&lt;td&gt;mybatis-spring-boot-starter&lt;/td&gt;
&lt;td&gt;3.0.3&lt;/td&gt;
&lt;td&gt;MyBatis 与 Spring Boot 集成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;工具类&lt;/td&gt;
&lt;td&gt;lombok&lt;/td&gt;
&lt;td&gt;1.18.30&lt;/td&gt;
&lt;td&gt;减少模板代码，通过注解生成 getter/setter 等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;工具类&lt;/td&gt;
&lt;td&gt;fastjson&lt;/td&gt;
&lt;td&gt;2.0.32&lt;/td&gt;
&lt;td&gt;JSON 序列化与反序列化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;工具类&lt;/td&gt;
&lt;td&gt;commons-lang3&lt;/td&gt;
&lt;td&gt;3.12.0&lt;/td&gt;
&lt;td&gt;常用 Java 工具类扩展&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;td&gt;druid-spring-boot-starter&lt;/td&gt;
&lt;td&gt;1.2.20&lt;/td&gt;
&lt;td&gt;数据库连接池&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;td&gt;pagehelper-spring-boot-starter&lt;/td&gt;
&lt;td&gt;1.4.7&lt;/td&gt;
&lt;td&gt;分页插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;API 文档&lt;/td&gt;
&lt;td&gt;knife4j-openapi3-jakarta-spring-boot-starter&lt;/td&gt;
&lt;td&gt;4.5.0&lt;/td&gt;
&lt;td&gt;生成 API 文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AOP&lt;/td&gt;
&lt;td&gt;aspectjrt、aspectjweaver&lt;/td&gt;
&lt;td&gt;1.9.20&lt;/td&gt;
&lt;td&gt;AOP 编程支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;安全&lt;/td&gt;
&lt;td&gt;jjwt-api、jjwt-impl、jjwt-jackson&lt;/td&gt;
&lt;td&gt;0.11.5&lt;/td&gt;
&lt;td&gt;JWT 令牌处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;存储&lt;/td&gt;
&lt;td&gt;aliyun-sdk-oss&lt;/td&gt;
&lt;td&gt;3.10.2&lt;/td&gt;
&lt;td&gt;阿里云 OSS 存储服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文档处理&lt;/td&gt;
&lt;td&gt;poi、poi-ooxml&lt;/td&gt;
&lt;td&gt;5.2.5&lt;/td&gt;
&lt;td&gt;Excel 文件处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;支付&lt;/td&gt;
&lt;td&gt;wechatpay-apache-httpclient&lt;/td&gt;
&lt;td&gt;0.4.8&lt;/td&gt;
&lt;td&gt;微信支付接口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;td&gt;mysql-connector-j&lt;/td&gt;
&lt;td&gt;8.0.33&lt;/td&gt;
&lt;td&gt;MySQL 数据库驱动&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;2. sky-server 模块依赖&lt;/h4&gt;
&lt;p&gt;该模块是项目的核心业务模块，依赖关系如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;依赖来源&lt;/th&gt;
&lt;th&gt;具体依赖&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;自定义模块&lt;/td&gt;
&lt;td&gt;sky-common、sky-pojo&lt;/td&gt;
&lt;td&gt;项目内部通用模块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Boot&lt;/td&gt;
&lt;td&gt;spring-boot-starter、spring-boot-starter-web&lt;/td&gt;
&lt;td&gt;Spring Boot 核心及 Web 支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Boot&lt;/td&gt;
&lt;td&gt;spring-boot-starter-test&lt;/td&gt;
&lt;td&gt;单元测试支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;td&gt;mysql-connector-j、mybatis-spring-boot-starter&lt;/td&gt;
&lt;td&gt;数据库连接与 ORM 框架&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;工具类&lt;/td&gt;
&lt;td&gt;lombok、fastjson、druid-spring-boot-starter&lt;/td&gt;
&lt;td&gt;工具类与数据库连接池&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;工具类&lt;/td&gt;
&lt;td&gt;pagehelper-spring-boot-starter&lt;/td&gt;
&lt;td&gt;分页查询支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AOP&lt;/td&gt;
&lt;td&gt;aspectjrt、aspectjweaver&lt;/td&gt;
&lt;td&gt;面向切面编程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;API 文档&lt;/td&gt;
&lt;td&gt;knife4j-openapi3-jakarta-spring-boot-starter&lt;/td&gt;
&lt;td&gt;接口文档生成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;缓存&lt;/td&gt;
&lt;td&gt;spring-boot-starter-data-redis、spring-boot-starter-cache&lt;/td&gt;
&lt;td&gt;Redis 缓存支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实时通信&lt;/td&gt;
&lt;td&gt;spring-boot-starter-websocket&lt;/td&gt;
&lt;td&gt;WebSocket 支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文档处理&lt;/td&gt;
&lt;td&gt;poi、poi-ooxml&lt;/td&gt;
&lt;td&gt;Excel 导入导出&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;3. sky-common 模块依赖&lt;/h4&gt;
&lt;p&gt;该模块包含项目通用的工具类和组件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;依赖类别&lt;/th&gt;
&lt;th&gt;具体依赖&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;工具类&lt;/td&gt;
&lt;td&gt;lombok、fastjson、commons-lang3&lt;/td&gt;
&lt;td&gt;通用工具类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JSON 处理&lt;/td&gt;
&lt;td&gt;spring-boot-starter-json&lt;/td&gt;
&lt;td&gt;JSON 数据处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;安全&lt;/td&gt;
&lt;td&gt;jjwt-api、jjwt-impl、jjwt-jackson&lt;/td&gt;
&lt;td&gt;JWT 令牌处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;配置&lt;/td&gt;
&lt;td&gt;spring-boot-configuration-processor&lt;/td&gt;
&lt;td&gt;配置文件处理器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;存储&lt;/td&gt;
&lt;td&gt;aliyun-sdk-oss&lt;/td&gt;
&lt;td&gt;阿里云 OSS 服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;支付&lt;/td&gt;
&lt;td&gt;wechatpay-apache-httpclient&lt;/td&gt;
&lt;td&gt;微信支付集成&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;4. sky-pojo 模块依赖&lt;/h4&gt;
&lt;p&gt;该模块主要包含项目实体类：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;依赖类别&lt;/th&gt;
&lt;th&gt;具体依赖&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;工具类&lt;/td&gt;
&lt;td&gt;lombok&lt;/td&gt;
&lt;td&gt;简化实体类代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JSON 处理&lt;/td&gt;
&lt;td&gt;jackson-databind&lt;/td&gt;
&lt;td&gt;JSON 序列化支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;API 文档&lt;/td&gt;
&lt;td&gt;knife4j-openapi3-jakarta-spring-boot-starter&lt;/td&gt;
&lt;td&gt;实体类文档注释支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;5.依赖关系图&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sky-take-out (父模块)
├── sky-common (通用模块)
│   ├── Lombok
│   ├── FastJSON
│   ├── JWT
│   ├── 阿里云OSS
│   └── 微信支付
│
├── sky-pojo (实体类模块)
│   ├── Lombok
│   ├── Jackson
│   └── API文档支持
│
└── sky-server (核心业务模块)
    ├── 依赖 sky-common 和 sky-pojo
    ├── Spring Boot 核心
    ├── Web支持
    ├── 数据库相关
    ├── 缓存(Redis)
    ├── WebSocket
    ├── Excel处理
    └── AOP支持
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item></channel></rss>